<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from cubli.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Revolute-Revolute Manipulator -->
<robot name="cubli" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Space btw top of beam and the each joint -->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/cubli</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <gazebo reference="cube">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="wheel_x">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheel_y">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="wheel_z">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!--&lt;!&ndash; Link3 &ndash;&gt;-->
  <!--<gazebo reference="link3">-->
  <!--<mu1>0.2</mu1>-->
  <!--<mu2>0.2</mu2>-->
  <!--<material>Gazebo/Orange</material>-->
  <!--</gazebo>-->
  <!--&lt;!&ndash; camera_link &ndash;&gt;-->
  <!--<gazebo reference="camera_link">-->
  <!--<mu1>0.2</mu1>-->
  <!--<mu2>0.2</mu2>-->
  <!--<material>Gazebo/Red</material>-->
  <!--</gazebo>-->
  <!-- hokuyo -->
  <!--<gazebo reference="hokuyo_link">-->
  <!--<sensor type="gpu_ray" name="head_hokuyo_sensor">-->
  <!--<pose>0 0 0 0 0 0</pose>-->
  <!--<visualize>false</visualize>-->
  <!--<update_rate>40</update_rate>-->
  <!--<ray>-->
  <!--<scan>-->
  <!--<horizontal>-->
  <!--<samples>720</samples>-->
  <!--<resolution>1</resolution>-->
  <!--<min_angle>-1.570796</min_angle>-->
  <!--<max_angle>1.570796</max_angle>-->
  <!--</horizontal>-->
  <!--</scan>-->
  <!--<range>-->
  <!--<min>0.10</min>-->
  <!--<max>30.0</max>-->
  <!--<resolution>0.01</resolution>-->
  <!--</range>-->
  <!--<noise>-->
  <!--<type>gaussian</type>-->
  <!--&lt;!&ndash; Noise parameters based on published spec for Hokuyo laser-->
  <!--achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and-->
  <!--stddev of 0.01m will put 99.7% of samples within 0.03m of the true-->
  <!--reading. &ndash;&gt;-->
  <!--<mean>0.0</mean>-->
  <!--<stddev>0.01</stddev>-->
  <!--</noise>-->
  <!--</ray>-->
  <!--<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">-->
  <!--<topicName>/cubli/laser/scan</topicName>-->
  <!--<frameName>hokuyo_link</frameName>-->
  <!--</plugin>-->
  <!--</sensor>-->
  <!--</gazebo>-->
  <!-- camera -->
  <!--<gazebo reference="camera_link">-->
  <!--<sensor type="camera" name="camera1">-->
  <!--<update_rate>30.0</update_rate>-->
  <!--<camera name="head">-->
  <!--<horizontal_fov>1.3962634</horizontal_fov>-->
  <!--<image>-->
  <!--<width>800</width>-->
  <!--<height>800</height>-->
  <!--<format>R8G8B8</format>-->
  <!--</image>-->
  <!--<clip>-->
  <!--<near>0.02</near>-->
  <!--<far>300</far>-->
  <!--</clip>-->
  <!--<noise>-->
  <!--<type>gaussian</type>-->
  <!--&lt;!&ndash; Noise is sampled independently per pixel on each frame.-->
  <!--That pixel's noise value is added to each of its color-->
  <!--channels, which at that point lie in the range [0,1]. &ndash;&gt;-->
  <!--<mean>0.0</mean>-->
  <!--<stddev>0.007</stddev>-->
  <!--</noise>-->
  <!--</camera>-->
  <!--<plugin name="camera_controller" filename="libgazebo_ros_camera.so">-->
  <!--<alwaysOn>true</alwaysOn>-->
  <!--<updateRate>0.0</updateRate>-->
  <!--<cameraName>cubli/camera1</cameraName>-->
  <!--<imageTopicName>image_raw</imageTopicName>-->
  <!--<cameraInfoTopicName>camera_info</cameraInfoTopicName>-->
  <!--<frameName>camera_link_optical</frameName>-->
  <!--&lt;!&ndash; setting hackBaseline to anything but 0.0 will cause a misalignment-->
  <!--between the gazebo sensor image and the frame it is supposed to-->
  <!--be attached to &ndash;&gt;-->
  <!--<hackBaseline>0.0</hackBaseline>-->
  <!--<distortionK1>0.0</distortionK1>-->
  <!--<distortionK2>0.0</distortionK2>-->
  <!--<distortionK3>0.0</distortionK3>-->
  <!--<distortionT1>0.0</distortionT1>-->
  <!--<distortionT2>0.0</distortionT2>-->
  <!--<CxPrime>0</CxPrime>-->
  <!--<Cx>0.0</Cx>-->
  <!--<Cy>0.0</Cy>-->
  <!--<focalLength>0.0</focalLength>-->
  <!--</plugin>-->
  <!--</sensor>-->
  <!--</gazebo>-->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!--&lt;!&ndash; Used for fixing robot to Gazebo 'base_link' &ndash;&gt;-->
  <!--<link name="world"/>-->
  <!--<joint name="fixed" type="fixed">-->
  <!--<parent link="world"/>-->
  <!--<child link="cube"/>-->
  <!--</joint>-->
  <link name="cube">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <link name="wheel_x">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.145833" ixy="0.0" ixz="0.0" iyy="0.145833" iyz="0.0" izz="0.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.4"/>
      </geometry>
    </visual>
    <!--<collision>-->
    <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
    <!--<geometry>-->
    <!--<cylinder length="${wheel_length}" radius="${wheel_radius}"/>-->
    <!--</geometry>-->
    <!--</collision>-->
  </link>
  <link name="wheel_y">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.145833" ixy="0.0" ixz="0.0" iyy="0.145833" iyz="0.0" izz="0.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.4"/>
      </geometry>
    </visual>
    <!--<collision>-->
    <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
    <!--<geometry>-->
    <!--<cylinder length="${wheel_length}" radius="${wheel_radius}"/>-->
    <!--</geometry>-->
    <!--</collision>-->
  </link>
  <link name="wheel_z">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.145833" ixy="0.0" ixz="0.0" iyy="0.145833" iyz="0.0" izz="0.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.4"/>
      </geometry>
    </visual>
    <!--<collision>-->
    <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
    <!--<geometry>-->
    <!--<cylinder length="${wheel_length}" radius="${wheel_radius}"/>-->
    <!--</geometry>-->
    <!--</collision>-->
  </link>
  <joint name="joint_x" type="continuous">
    <parent link="cube"/>
    <child link="wheel_x"/>
    <origin rpy="0 1.57079632679 0" xyz="0.476 0 0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.7"/>
  </joint>
  <joint name="joint_y" type="continuous">
    <parent link="cube"/>
    <child link="wheel_y"/>
    <origin rpy="-1.57079632679 0 0" xyz="0 0.476 0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.7"/>
  </joint>
  <joint name="joint_z" type="continuous">
    <parent link="cube"/>
    <child link="wheel_z"/>
    <origin rpy="0 0 0" xyz="0 0 0.476"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.7"/>
  </joint>
  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_x">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_y">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_z">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

